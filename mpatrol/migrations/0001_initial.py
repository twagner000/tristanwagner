# Generated by Django 2.0.6 on 2018-06-15 04:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Battalion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battalion_number', models.PositiveSmallIntegerField(default=1)),
                ('count', models.PositiveSmallIntegerField(default=0)),
                ('level', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'ordering': ['battalion_number'],
            },
        ),
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battle_date', models.DateTimeField(auto_now_add=True)),
                ('successful_attack', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-battle_date'],
            },
        ),
        migrations.CreateModel(
            name='Creature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('plural_name', models.CharField(max_length=50)),
                ('min_ll', models.PositiveSmallIntegerField(default=1, verbose_name='Min Leader Level')),
                ('attack', models.PositiveSmallIntegerField(default=0)),
                ('defense', models.PositiveSmallIntegerField(default=0)),
                ('cost_cp', models.PositiveSmallIntegerField(default=1, verbose_name='Cost in Creature Points')),
                ('cost_gold', models.PositiveSmallIntegerField(default=20, verbose_name='Cost in Gold')),
                ('work_gold', models.PositiveSmallIntegerField(default=5, verbose_name='Gold from Working')),
                ('work_xp', models.PositiveSmallIntegerField(default=10, verbose_name='Experience from Working')),
                ('oversee', models.PositiveSmallIntegerField(default=0, verbose_name='Overseeing Capability')),
            ],
            options={
                'ordering': ['min_ll', 'cost_cp', 'cost_gold', 'work_gold', 'work_xp'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('started_date', models.DateTimeField(auto_now_add=True)),
                ('ended_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaderLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(unique=True)),
                ('life', models.PositiveIntegerField(default=0)),
                ('cp', models.PositiveIntegerField(default=0)),
                ('xp_cost', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('subject', models.TextField()),
                ('message', models.TextField(blank=True)),
                ('unread', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-sent_date'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_date', models.DateTimeField(auto_now_add=True)),
                ('last_action_date', models.DateTimeField(blank=True, null=True)),
                ('gold', models.PositiveIntegerField(default=100)),
                ('xp', models.PositiveIntegerField(default=0, verbose_name='Experience')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mpatrol.Game')),
                ('ll', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mpatrol.LeaderLevel', verbose_name='Leader Level')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('cost_gold', models.PositiveSmallIntegerField(default=100)),
                ('cost_xp', models.PositiveSmallIntegerField(default=100)),
                ('effects', models.TextField(blank=True)),
                ('struct_req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Structure', verbose_name='Required Structure')),
            ],
            options={
                'ordering': ['cost_gold', 'cost_xp', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('cost', models.PositiveSmallIntegerField(default=100)),
                ('prereq', models.ManyToManyField(blank=True, to='mpatrol.Technology', verbose_name='Prerequisite')),
            ],
            options={
                'ordering': ['level', 'cost', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WeaponBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('attack_mult', models.FloatField(default=1.0)),
                ('cost_gold', models.PositiveSmallIntegerField(default=1)),
                ('struct_req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Structure', verbose_name='Required Structure')),
                ('tech_req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Technology', verbose_name='Required Technology')),
            ],
            options={
                'ordering': ['cost_gold', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WeaponMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('attack_mult', models.FloatField(default=1.0)),
                ('cost_mult', models.FloatField(default=1.0)),
                ('armor', models.PositiveSmallIntegerField(default=1)),
                ('struct_req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Structure', verbose_name='Required Structure')),
                ('tech_req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Technology', verbose_name='Required Technology')),
            ],
            options={
                'ordering': ['cost_mult', 'name'],
            },
        ),
        migrations.AddField(
            model_name='structure',
            name='tech_req',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Technology', verbose_name='Required Technology'),
        ),
        migrations.AddField(
            model_name='player',
            name='structures',
            field=models.ManyToManyField(blank=True, to='mpatrol.Structure'),
        ),
        migrations.AddField(
            model_name='player',
            name='technologies',
            field=models.ManyToManyField(blank=True, to='mpatrol.Technology'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipient_set', to='mpatrol.Player'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sender_set', to='mpatrol.Player'),
        ),
        migrations.AddField(
            model_name='battle',
            name='attacker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attacker_set', to='mpatrol.Player'),
        ),
        migrations.AddField(
            model_name='battle',
            name='defender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defender_set', to='mpatrol.Player'),
        ),
        migrations.AddField(
            model_name='battalion',
            name='creature',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.Creature'),
        ),
        migrations.AddField(
            model_name='battalion',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mpatrol.Player'),
        ),
        migrations.AddField(
            model_name='battalion',
            name='weapon_base',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.WeaponBase'),
        ),
        migrations.AddField(
            model_name='battalion',
            name='weapon_material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mpatrol.WeaponMaterial'),
        ),
        migrations.AlterUniqueTogether(
            name='player',
            unique_together={('game', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='battalion',
            unique_together={('player', 'battalion_number')},
        ),
    ]
